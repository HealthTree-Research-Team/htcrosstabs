% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_rows.R
\name{get_formatted_rows}
\alias{get_formatted_rows}
\alias{get_complete_row}
\alias{get_total_row}
\alias{get_complete_total_row}
\alias{get_mean_row}
\alias{get_sd_row}
\alias{get_mean_sd_row}
\alias{get_median_row}
\alias{get_med_row}
\alias{get_q1_row}
\alias{get_q3_row}
\alias{get_q1_q3_row}
\alias{get_iqr_row}
\alias{get_iqr_q3_q1_row}
\alias{get_med_q1_q3_row}
\alias{get_count_rows}
\alias{get_proportion_rows}
\alias{get_prop_rows}
\alias{get_count_prop_rows}
\alias{get_percent_rows}
\alias{get_count_percent_rows}
\alias{get_anova_rows}
\alias{get_chisq_rows}
\alias{get_rao_scott_rows}
\title{Get Formatted Output Rows}
\usage{
get_complete_row(ct, long = FALSE, long_out_col = COMP_COL_NAME)

get_total_row(ct, long = FALSE, long_out_col = TOTAL_COL_NAME)

get_complete_total_row(ct, long = FALSE, long_out_col = COMP_TOT_COL_NAME)

get_mean_row(
  ct,
  round_to = MEAN_ROUND_TO,
  long = FALSE,
  long_out_col = MEAN_COL_NAME
)

get_sd_row(
  ct,
  round_to = SD_ROUND_TO,
  long = FALSE,
  long_out_col = SD_COL_NAME
)

get_mean_sd_row(
  ct,
  round_to = MEAN_SD_ROUND_TO,
  long = FALSE,
  long_out_col = MEAN_SD_COL_NAME
)

get_median_row(
  ct,
  round_to = MEDIAN_ROUND_TO,
  long = FALSE,
  long_out_col = MED_COL_NAME
)

get_med_row(
  ct,
  round_to = MEDIAN_ROUND_TO,
  long = FALSE,
  long_out_col = MED_COL_NAME
)

get_q1_row(
  ct,
  round_to = Q1_ROUND_TO,
  long = FALSE,
  long_out_col = Q1_COL_NAME
)

get_q3_row(
  ct,
  round_to = Q3_ROUND_TO,
  long = FALSE,
  long_out_col = Q3_COL_NAME
)

get_q1_q3_row(
  ct,
  round_to = Q1_Q3_ROUND_TO,
  long = FALSE,
  long_out_col = Q1_Q3_COL_NAME
)

get_iqr_row(
  ct,
  round_to = IQR_ROUND_TO,
  long = FALSE,
  long_out_col = IQR_COL_NAME
)

get_iqr_q3_q1_row(
  ct,
  round_to = IQR_Q3_Q1_ROUND_TO,
  long = FALSE,
  long_out_col = IQR_Q3_Q1_COL_NAME
)

get_med_q1_q3_row(
  ct,
  round_to = MED_Q1_Q3_ROUND_TO,
  long = FALSE,
  long_out_col = MED_Q1_Q3_COL_NAME
)

get_count_rows(
  ct,
  long = FALSE,
  long_out_col = COUNT_COL_NAME,
  keep_na_vars = FALSE
)

get_proportion_rows(
  ct,
  round_to = PROP_ROUND_TO,
  long = FALSE,
  long_out_col = PROP_COL_NAME,
  keep_na_vars = FALSE
)

get_prop_rows(
  ct,
  round_to = PROP_ROUND_TO,
  long = FALSE,
  long_out_col = PROP_COL_NAME,
  keep_na_vars = FALSE
)

get_count_prop_rows(
  ct,
  round_to = COUNT_PROP_ROUND_TO,
  long = FALSE,
  long_out_col = COUNT_PROP_COL_NAME,
  keep_na_vars = FALSE
)

get_percent_rows(
  ct,
  round_to = PERCENT_ROUND_TO,
  long = FALSE,
  long_out_col = PERCENT_COL_NAME,
  keep_na_vars = FALSE,
  raw = FALSE
)

get_count_percent_rows(
  ct,
  round_to = COUNT_PERCENT_ROUND_TO,
  long = FALSE,
  long_out_col = COUNT_PERCENT_COL_NAME,
  keep_na_vars = FALSE
)

get_anova_rows(ct, cutoff = 0.05, round_to = 3)

get_chisq_rows(ct, p.adj = TRUE, method = "BH", cutoff = 0.05, round_to = 3)

get_rao_scott_rows(
  ct,
  p.adj = TRUE,
  method = "BH",
  cutoff = 0.05,
  round_to = 3
)
}
\arguments{
\item{ct}{The crosstab object used to calculate the values}

\item{long}{Logical - Should the values be printed in long form instead of formatted wide?}

\item{long_out_col, }{Character - If `long = TRUE`, what should the output column be named?}

\item{round_to}{Numeric - How many decimal places to round the values to}

\item{keep_na_vars}{Logical - If `TRUE`, NA variables are treated as values and shown in rows like "count"}

\item{raw}{Logical - If `TRUE` the function returns the raw numeric values rather than the formatted strings (e.g. 25 instead of "25\%")}

\item{cutoff}{Numeric - The p-value cutoff for significance (usually 0.05)}

\item{p.adj}{Logical - Should the p-values be adjusted to account for multiple pairwise tests?}

\item{method}{Character - The p-value adjustment method (see the man page for [stats::p.adjust()] for possible values)}
}
\value{
A data frame in the specified format (wide formatted for output unless `long = TRUE`)
}
\description{
The `get_*_row()` functions all create a data frame formatted for the output
table, but separate from the original crosstab object.
}
\section{Functions}{
\itemize{
\item \code{get_complete_row()}: Get the number complete (not NA) for each cohort

\item \code{get_total_row()}: Get the number of rows (including NA) for each cohort

\item \code{get_complete_total_row()}: Get a string formatted as "[complete] / [total]" for each cohort

\item \code{get_mean_row()}: Get the mean for each cohort

\item \code{get_sd_row()}: Get the standard deviation for each cohort

\item \code{get_mean_sd_row()}: Get a string formatted as "[mean] +/- [sd]" for each cohort

\item \code{get_median_row()}: Get the median for each cohort (same as `get_med_row()`)

\item \code{get_med_row()}: Get the median for each cohort (same as `get_median_row()`)

\item \code{get_q1_row()}: Get the first quartile for each cohort

\item \code{get_q3_row()}: Get the third quartile for each cohort

\item \code{get_q1_q3_row()}: Get a string formatted as "[Q1]--[Q3]" for each cohort

\item \code{get_iqr_row()}: Get the IQR (Q3-Q1) for each cohort

\item \code{get_iqr_q3_q1_row()}: Get a string formatted as "[IQR] ([Q3]-[Q1])" for each cohort

\item \code{get_med_q1_q3_row()}: Get a string formatted as "[median] ([Q1], [Q3])" for each cohort

\item \code{get_count_rows()}: Get the counts for each response and cohort

\item \code{get_proportion_rows()}: Get the proportion of responses (out of complete) for each response and cohort (same as `get_prop_rows()`)

\item \code{get_prop_rows()}: Get the proportion of responses (out of complete) for each response and cohort (same as `get_proportion_rows()`)

\item \code{get_count_prop_rows()}: Get a string formatted as "[count] ([prop])" for each response and cohort

\item \code{get_percent_rows()}: Get the percent (out of complete) for each response and cohort

\item \code{get_count_percent_rows()}: Get a string formatted as "[count] ([percent]\%)" for each response and cohort

\item \code{get_anova_rows()}: Get the rows formatted with ANOVA p-value and Tukey post-hoc (if applicable)

\item \code{get_chisq_rows()}: Get the rows formatted with chi-square p-value and pairwise post-hoc (if applicable)

\item \code{get_rao_scott_rows()}: Get the rows formatted with Rao-Scott chi-square p-value and pairwise posthoc (if applicable)

}}
\section{Row Format Components}{

The rows contain some formatted combination of these variables:
* Total: The number of rows in the original data frame
* Complete: The number of non-NA rows in the original data frame
* Mean: The mean of the numeric data or Likert-like data
* SD: The standard deviation of the numeric data or Likert-like data
* Med: The median of the numeric data
* Q1: The 1st quartile of the numeric data
* Q3: The 3rd quartile of the numeric data
* Count: The total number of each response in the categorical data
* Proportion: The proportion of each response in the categorical data (out of "complete")
* Percent: The percent of each response in the categorical data (out of "complete")
* ANOVA: The ANOVA p-values and Tukey post-hoc p-values of the numeric data
* Chi-Square: The chi-square p-values and adjusted pairwise post-hoc p-values of the numeric data
* Rao-Scott: The Rao-Scott adjusted chi-square p-values and adjusted pairwise post-hoc p-values of the numeric data
}

\examples{
num_ct <- crosstab(length_by_species, cohort_col_name = "species")

get_mean_sd_row(num_ct)
get_med_q1_q3_row(num_ct)

get_mean_sd_row(num_ct, long = TRUE)
get_med_q1_q3_row(num_ct, long = TRUE)

}
