% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crosstab.R
\name{data_table}
\alias{data_table}
\alias{data_table<-}
\alias{set_new_data}
\title{Extract the Data the Crosstab Uses}
\usage{
data_table(ct, raw = FALSE)

data_table(ct) <- value

set_new_data(ct, tbl, var_map = NULL)
}
\arguments{
\item{ct}{The crosstab object from which you wish to extract the current data table}

\item{raw}{Logical, get rid of combined or "All" column? (Optional)}

\item{value, tbl}{The replacement data table}

\item{var_map}{A named numeric vector in case `value` or `tbl` are a data frame of likert values}
}
\value{
The crosstab_data object at the heart of the crosstab object.
}
\description{
`data_table()` returns the crosstab_data object at the heart of the crosstab.
It stores the data from the data frame that was passed in. Since grouped
data adds a combined or "All" column in the output, That extra data is added
on. If you want the data without the combined or "All" cohort, set `raw = TRUE`.
}
\details{
The setters `set_new_data()` and `data_table(ct) <- new_data` can be passed
either a crosstab_data object or another full crosstab object to copy the
data table from. The new data table doesn't have the be the same data type,
and any rows/tables added from then on will be based on the new data and
their corresponding index will be updated with the `var_name()` from the new
data.
}
\examples{
# Ungrouped data
num_ct <- crosstab(petal_width)

num_data_table <- data_table(num_ct)
head(num_data_table, 10) # A default cohort column is added to ungrouped data

# Grouped data
num_df <- iris[, c("Sepal.Length", "Species"), drop = FALSE]
num_ct <- crosstab(num_df, cohort_col_name = "Species")

num_data_table <- data_table(num_ct)
head(num_data_table, 10) # A combined cohort is added to grouped data

raw_data_table <- data_table(num_ct, raw = TRUE)
head(raw_data_table, 10) # raw = TRUE removes the combined cohort

# Setting new data
new_df <- iris[, c("Sepal.Width", "Species"), drop = FALSE]
new_data <- crosstab_data(new_df, cohort_col_name = "Species")
data_table(num_ct) <- new_data
head(data_table(num_ct, raw = TRUE), 10)

}
