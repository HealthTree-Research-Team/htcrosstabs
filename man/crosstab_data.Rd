% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crosstab_data.R
\name{crosstab_data}
\alias{crosstab_data}
\title{Create the Inner Sub-Table for a Crosstab Object}
\usage{
crosstab_data(
  df,
  cohort_col_name = NULL,
  var_map = NULL,
  new_var_col_name = NULL,
  combined_cohort_name = "All",
  desc_col_name = "Description"
)
}
\arguments{
\item{df}{The data frame to be converted to a crosstab}

\item{cohort_col_name}{If applicable, the name of the column with the cohorts to split the data on.}

\item{var_map}{A named numeric vector (or list of vectors) for Likert-like data mapping categorical values to numeric values}

\item{new_var_col_name}{(Optional) You can rename the variable column with this parameter.}

\item{combined_cohort_name}{(Optional) The name of the "combined" column for grouped data.}

\item{desc_col_name}{(Optional) The name of the left-most description column in the output table.}
}
\value{
A crosstab_data object, used for storing hidden data useful for internal functions.
}
\description{
You will likely never need to use the `crosstab_data()` constructor. It takes
a data frame and turns it into a structured, formatted table with attributes
helpful for htcrosstabs's internal functions. Under the hood, this function
is called during the broader call to the [crosstab()] constructor.
}
\examples{
# Ungrouped data
num_df <- iris[, "Sepal.Length", drop = FALSE]
num_ct <- crosstab_data(num_df)
utils::tail(num_ct, 10)
names(attributes(num_ct))

# Grouped data
num_df <- iris[, c("Sepal.Length", "Species"), drop = FALSE]
num_ct <- crosstab_data(num_df, cohort_col_name = "Species")
utils::tail(num_ct, 10)
names(attributes(num_ct))

}
