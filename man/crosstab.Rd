% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crosstab.R
\name{crosstab}
\alias{crosstab}
\alias{as.crosstab}
\title{Create a Crosstab Object}
\usage{
crosstab(
  df,
  cohort_col_name = NULL,
  var_map = NULL,
  new_var_col_name = NULL,
  combined_cohort_name = "All",
  desc_col_name = "Description"
)

as.crosstab(
  df,
  cohort_col_name = NULL,
  var_map = NULL,
  new_var_col_name = NULL,
  combined_cohort_name = "All",
  desc_col_name = "Description"
)
}
\arguments{
\item{df}{The data frame to be converted to a crosstab}

\item{cohort_col_name}{If applicable, the name of the column with the cohorts to split the data on.}

\item{var_map}{A named numeric vector (or list of vectors) for Likert-like data mapping categorical values to numeric values}

\item{new_var_col_name}{(Optional) You can rename the variable column with this parameter.}

\item{combined_cohort_name}{(Optional) The name of the "combined" column for grouped data.}

\item{desc_col_name}{(Optional) The name of the left-most description column in the output table.}
}
\value{
A completed crosstab object
}
\description{
`crosstab()` turns a data frame into a crosstab object, allowing for easy
calculation and output. The object itself is the output table, with extra
attributes storing different aspects of the data, accessible with the
`get_*()` functions.
}
\details{
The crosstab object allows for easy calculation of certain variables and
output. The variables are accessible via the `get_*()` functions.

The output table has a description column on the left, followed by a combined
or "All" column (if the data is grouped), followed by a column for each
cohort. This output table can be filled by calls to the `add_*_row()`
functions, or adding custom rows with calls to `add_rows()`.

The order of variables, both in terms of rows and columns, are determined by
the factor levels of the variables and cohorts respectively. Factorizing
list-columns of multi-response data can be a hassle, so we have also provided
an override of the [factor()] and [levels()] functions.

The `as.crosstab()` function simply passes the inputs on to the [crosstab()]
constructor (crosstab objects are returned as-is).
}
\section{Functions}{
\itemize{
\item \code{as.crosstab()}: Another way to call `crosstab()`

}}
\examples{
# Ungrouped data
num_ct <- crosstab(petal_width)
add_default_table(num_ct)

# Grouped data
num_ct <- crosstab(length_by_species, cohort_col_name = "species")
add_default_table(num_ct)

}
